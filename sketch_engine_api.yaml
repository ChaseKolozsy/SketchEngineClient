openapi: 3.0.3
info:
  title: Sketch-Engine-Like API
  description: |
    This API provides endpoints for querying linguistic corpora (concordances, 
    word sketches, thesaurus, wordlists, etc.).
  version: "1.0.0"

servers:
  - url: https://api.sketchengine.eu
    description: Sketch Engine API server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: API Key
      description: API key must be provided in the Authorization header as "Bearer {api_key}"

paths:

  ########################################
  # /search/concordance
  ########################################
  /search/concordance:
    get:
      summary: Concordance
      description: >
        Shows the search word or phrase in context. Allows complex criteria
        for searching the corpus, including metadata and annotations.
      parameters:
        - name: corpname
          in: query
          required: true
          schema:
            type: string
          description: >
            Corpus name. For a custom user corpus, use e.g. user/john/mycorpus.
            Example: preloaded/bncz_tt21
        - name: q
          in: query
          required: false
          schema:
            type: string
          description: >
            Primary query string (CQL, iquery, etc.) Simplified wildcards supported.
        - name: concordance_query[iquery]
          in: query
          required: false
          schema:
            type: string
          description: >
            Query used with querySelector=iqueryrow. Accepts wildcards.
        - name: concordance_query[cql]
          in: query
          required: false
          schema:
            type: string
          description: >
            Query used with querySelector=cqlrow (CQL format).
        - name: concordance_query[lemma]
          in: query
          required: false
          schema:
            type: string
          description: >
            Query used with querySelector=lemmarow (lemma-based search).
        - name: concordance_query[char]
          in: query
          required: false
          schema:
            type: string
          description: >
            Query used with querySelector=charrow (character-based tokens).
        - name: concordance_query[word]
          in: query
          required: false
          schema:
            type: string
          description: >
            Query used with querySelector=wordrow (word-form-based search).
        - name: concordance_query[phrase]
          in: query
          required: false
          schema:
            type: string
          description: >
            Query used with querySelector=phraserow (phrase-based search).
        - name: usesubcorp
          in: query
          required: false
          schema:
            type: string
          description: >
            The name of the subcorpus. Default is an empty string (full corpus).
        - name: lpos
          in: query
          required: false
          schema:
            type: string
          description: >
            The part-of-speech of the lemma. Varies by corpus; if omitted, 
            defaults to the most frequent POS of the lemma in the corpus.
        - name: default_attr
          in: query
          required: false
          schema:
            type: string
          description: >
            An attribute applied to tokens in the query when none is specified. 
            Example: default_attr=word
        - name: attrs
          in: query
          required: false
          schema:
            type: string
          description: >
            Comma-delimited attributes to return with each token. 
            E.g. word, lc, lemma, tag
        - name: refs
          in: query
          required: false
          schema:
            type: string
          description: >
            Text types (metadata) for statistics. E.g. =bndoc.alltyp
        - name: attr_allpos
          in: query
          required: false
          schema:
            type: string
          description: >
            Whether to return additional attributes in KWIC or all. 
            Values: kw, all
        - name: viewmode
          in: query
          required: false
          schema:
            type: string
          enum: [sen, kwic]
          description: >
            Switch between sentence (sen) or KWIC (kwic) view.
        - name: cup_hl
          in: query
          required: false
          schema:
            type: string
          description: >
            Only used with error-annotated corpora; determines highlighting 
            (errors, corrections, etc.).
        - name: structs
          in: query
          required: false
          schema:
            type: string
          description: >
            Comma-delimited structural tags to include in the result.
        - name: fromp
          in: query
          required: false
          schema:
            type: integer
          description: >
            The page number to be returned. Default is 1.
        - name: pagesize
          in: query
          required: false
          schema:
            type: integer
          description: >
            Number of lines in the concordance. Default is 20.
        - name: kwicleftctx
          in: query
          required: false
          schema:
            type: string
          description: >
            The size of the left context in KWIC view (in tokens). Default 100#
        - name: kwicrightctx
          in: query
          required: false
          schema:
            type: string
          description: >
            The size of the right context in KWIC view (in tokens). Default 100#
        - name: asyn
          in: query
          required: false
          schema:
            type: integer
          description: >
            Switches asynchronous processing (0 or 1). Default is usually 1 in 
            web interface, 0 for API calls.
        - name: format
          in: query
          required: false
          schema:
            type: string
          description: >
            The output format. Empty means JSON. Some endpoints can output 
            xml, csv, txt, xls, etc.
      responses:
        '200':
          description: Concordance results
          content:
            application/json:
              schema:
                type: object

  ########################################
  # /search/wsdiff
  ########################################
  /search/wsdiff:
    get:
      summary: Word Sketch Difference
      description: >
        Returns collocations of two lemmas with scores, indicating which 
        collocation is more typical. Observes the differences between lemmas.
      parameters:
        - name: corpname
          in: query
          required: true
          schema:
            type: string
          description: >
            Corpus name (e.g. preloaded/bncz_tt21).
        - name: lemma
          in: query
          required: true
          schema:
            type: string
          description: >
            The base form of the first lemma to compare.
        - name: lpos
          in: query
          required: false
          schema:
            type: string
          description: >
            The part of speech of the lemma.
        - name: diff_by
          in: query
          required: false
          schema:
            type: string
          enum: [lemma, word form, subcorpus]
          description: >
            The mode of wsdiff: 
            * lemma compares two lemmas,
            * word form compares two word forms,
            * subcorpus compares usage in two subcorpora.
        - name: lemma2
          in: query
          required: false
          schema:
            type: string
          description: >
            The second lemma to compare. Required if diff_by=lemma.
        - name: minfreq
          in: query
          required: false
          schema:
            type: string
          description: >
            Minimum frequency of a collocate. Collocates below this are hidden. 
            Could be an integer or 'auto'.
        - name: maxcommon
          in: query
          required: false
          schema:
            type: integer
          description: >
            Maximum number of collocates in a single table. Default 12.
        - name: separate_blocks
          in: query
          required: false
          schema:
            type: integer
          description: >
            1 => produce separate blocks by grammatical relation; 0 => single list.
        - name: maxexclusive
          in: query
          required: false
          schema:
            type: integer
          description: >
            Maximum number of collocates for an individual lemma to be returned. 
            Requires separate_blocks=1.
        - name: wordform1
          in: query
          required: false
          schema:
            type: string
          description: >
            The first word form to compare. Required if diff_by=word form.
        - name: wordform2
          in: query
          required: false
          schema:
            type: string
          description: >
            The second word form to compare. Required if diff_by=word form.
        - name: subcorp1
          in: query
          required: false
          schema:
            type: string
          description: >
            The first subcorpus name. Required if diff_by=subcorpus.
        - name: subcorp2
          in: query
          required: false
          schema:
            type: string
          description: >
            The second subcorpus for the wsdiff. Required if diff_by=subcorpus.
        - name: format
          in: query
          required: false
          schema:
            type: string
          description: >
            Output format. Defaults to JSON, can be xml, csv, etc.
      responses:
        '200':
          description: WSDiff results
          content:
            application/json:
              schema:
                type: object

  ########################################
  # /search/thes
  ########################################
  /search/thes:
    get:
      summary: Thesaurus
      description: >
        Generates a list of words similar in meaning or belonging to the same
        semantic group. Synonyms identified by corpus-driven statistics.
      parameters:
        - name: corpname
          in: query
          required: true
          schema:
            type: string
          description: >
            Corpus name (e.g. preloaded/bncz_tt21).
        - name: lemma
          in: query
          required: true
          schema:
            type: string
          description: >
            The base form of the word to query synonyms for.
        - name: lpos
          in: query
          required: false
          schema:
            type: string
          description: >
            Part of speech for the lemma.
        - name: usesubcorp
          in: query
          required: false
          schema:
            type: string
          description: >
            Name of the subcorpus. Defaults to empty (entire corpus).
        - name: minthesscore
          in: query
          required: false
          schema:
            type: integer
          description: >
            Minimum score for the thesaurus list.
        - name: maxthesitems
          in: query
          required: false
          schema:
            type: integer
          description: >
            Maximum number of items to display.
        - name: clustertitems
          in: query
          required: false
          schema:
            type: integer
          enum: [0, 1]
          description: >
            Whether to cluster items by similarity in meaning.
        - name: minsim
          in: query
          required: false
          schema:
            type: integer
          description: >
            Minimum similarity threshold used when clustertitems=1.
        - name: format
          in: query
          required: false
          schema:
            type: string
          description: >
            Output format. Defaults to JSON.
      responses:
        '200':
          description: Thesaurus results
          content:
            application/json:
              schema:
                type: object

  ########################################
  # /search/wsketch
  ########################################
  /search/wsketch:
    get:
      summary: Word Sketch
      description: >
        Generates word combinations (collocations) sorted by typicality or 
        frequency, categorized into grammatical relations.
      parameters:
        - name: corpname
          in: query
          required: true
          schema:
            type: string
          description: >
            Corpus name (e.g. preloaded/bncz_tt21).
        - name: lemma
          in: query
          required: true
          schema:
            type: string
          description: >
            Base form of the word (lemma) to get a word sketch for.
        - name: lpos
          in: query
          required: false
          schema:
            type: string
          description: >
            Part of speech for the lemma.
        - name: usesubcorp
          in: query
          required: false
          schema:
            type: string
          description: >
            Name of a subcorpus to restrict the word sketch.
        - name: minfreq
          in: query
          required: false
          schema:
            type: string
          description: >
            Minimum frequency below which collocates are hidden. May be integer or 'auto'.
        - name: minscore
          in: query
          required: false
          schema:
            type: string
          description: >
            The minimum logDice score of the collocates.
        - name: minsim
          in: query
          required: false
          schema:
            type: integer
          description: >
            The minimum similarity threshold when clusterColls=1.
        - name: maxitems
          in: query
          required: false
          schema:
            type: integer
          description: >
            Maximum number of items in each grammatical relation block.
        - name: clustercolls
          in: query
          required: false
          schema:
            type: integer
          enum: [0, 1]
          description: >
            Groups collocates by similarity in meaning if set to 1.
        - name: expand_seppage
          in: query
          required: false
          schema:
            type: integer
          enum: [0, 1]
          description: >
            1 => show grammatical relations grouped together on separate pages.
        - name: sort_ws_columns
          in: query
          required: false
          schema:
            type: string
          enum: [s, f]
          description: >
            Sort collocates by score (s) or absolute frequency (f).
        - name: structured
          in: query
          required: false
          schema:
            type: string
          enum: [1, 0]
          description: >
            1 => grouped into grammatical relations; 0 => single unstructured list.
        - name: bim_corpname
          in: query
          required: false
          schema:
            type: string
          description: >
            Second corpus for bilingual word sketches (if applicable).
        - name: bim_lemma
          in: query
          required: false
          schema:
            type: string
          description: >
            The lemma in the second corpus, for bilingual word sketches.
        - name: bim_lpos
          in: query
          required: false
          schema:
            type: string
          description: >
            The part of speech of the lemma in the second corpus, for bilingual sketches.
        - name: format
          in: query
          required: false
          schema:
            type: string
          description: >
            Output format. Defaults to JSON.
      responses:
        '200':
          description: Word Sketch results
          content:
            application/json:
              schema:
                type: object

  ########################################
  # /search/wordlist
  ########################################
  /search/wordlist:
    get:
      summary: Wordlist
      description: >
        Generates frequency lists of all tokens, lemmas, word forms, etc. 
        Also can retrieve frequencies of concrete items using regex filters.
      parameters:
        - name: corpname
          in: query
          required: true
          schema:
            type: string
          description: >
            Corpus name (e.g. preloaded/bncz_tt21).
        - name: wlattr
          in: query
          required: true
          schema:
            type: string
          description: >
            Attribute to count (e.g. word, lc, lemma, lemma_lc, tag, pos). 
            Different corpora may have additional attributes.
        - name: usesubcorp
          in: query
          required: false
          schema:
            type: string
          description: >
            Subcorpus name. Defaults to entire corpus.
        - name: wlnums
          in: query
          required: false
          schema:
            type: string
          enum: [freq, docf, arf]
          description: >
            Type of frequency to show: freq=raw freq, docf=document freq, arf=avg freq.
        - name: wlmaxfreq
          in: query
          required: false
          schema:
            type: integer
          description: >
            Maximum frequency limit. Items above this limit are not shown.
        - name: wlminfreq
          in: query
          required: false
          schema:
            type: integer
          description: >
            Minimum frequency limit. Items below this limit are excluded.
        - name: wlpat
          in: query
          required: false
          schema:
            type: string
          description: >
            Regex pattern to filter items in a simple wordlist. 
            Example: .* to match all.
        - name: wlsort
          in: query
          required: false
          schema:
            type: string
          enum: [freq, docf]
          description: >
            Sorting of the results. freq => by raw frequency, docf => by document frequency.
        - name: wlblacklist
          in: query
          required: false
          schema:
            type: string
          description: >
            A list of items to exclude, separated by newline symbols (%0A).
        - name: include_nonwords
          in: query
          required: false
          schema:
            type: integer
          enum: [0, 1]
          description: >
            Whether to include tokens that do not start with a letter (numbers, punctuation).
        - name: relfreq
          in: query
          required: false
          schema:
            type: integer
          enum: [0, 1]
          description: >
            Includes the relative frequency of each item (1) or not (0).
        - name: reldocf
          in: query
          required: false
          schema:
            type: integer
          enum: [0, 1]
          description: >
            Calculates document frequency for each item (1). Must be used with addfreqs=docf.
        - name: wlfile
          in: query
          required: false
          schema:
            type: string
          description: >
            A whitelist file with items to include in the list.
        - name: addfreqs
          in: query
          required: false
          schema:
            type: integer
          description: >
            Additional frequency type. For example, set to 1 when retrieving docf.
        - name: asyn
          in: query
          required: false
          schema:
            type: integer
          description: >
            1 => partial results are returned as soon as first page is available, 
            0 => results are returned only after the search completes.
        - name: format
          in: query
          required: false
          schema:
            type: string
          description: >
            Output format (JSON by default). Could be xml, csv, txt, etc.
      responses:
        '200':
          description: Wordlist results
          content:
            application/json:
              schema:
                type: object