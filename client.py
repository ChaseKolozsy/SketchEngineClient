# This file is AUTO-GENERATED by generate_sketchengine_api.py
import requests

class SketchEngineClient:
    """Client for interacting with the Sketch Engine API"""
    
    def __init__(self, api_key=None):
        """Initialize the client with authentication
        
        Args:
            api_key (str): The API key/Bearer token for authentication
        """
        self.api_key = api_key
        self.session = requests.Session()
        if api_key:
            self.session.headers.update({
                'Authorization': f'Bearer {api_key}'
            })

    def _make_request(self, method, url, params=None):
        """Make an authenticated request to the API
        
        Args:
            method (str): HTTP method (get, post, put, delete)
            url (str): API endpoint URL
            params (dict): Query parameters
            
        Returns:
            requests.Response: API response
        """
        request_method = getattr(self.session, method.lower())
        return request_method(url, params=params)

    def get_search_corp_info(self, corpname=None, usesubcorp=None, subcorpora=None, gramrels=None, corpcheck=None, registry=None, struct_attr_stats=None, format=None):
        """GET /search/corp_info"""
        url = "https://api.sketchengine.eu/search/corp_info"
        params = {
            'corpname': corpname,
            'usesubcorp': usesubcorp,
            'subcorpora': subcorpora,
            'gramrels': gramrels,
            'corpcheck': corpcheck,
            'registry': registry,
            'struct_attr_stats': struct_attr_stats,
            'format': format
        }
        return self._make_request('get', url, params=params)

    def get_search_wordlist(self, corpname=None, wlattr=None, usesubcorp=None, wlnums=None, wlmaxfreq=None, wlminfreq=None, wlpat=None, wlsort=None, wlblacklist=None, include_nonwords=None, relfreq=None, reldocf=None, wlfile=None, wlicase=None, wlmaxitems=None, wlpage=None, format=None, random=None, wltype=None, ngrams_n=None, ngrams_max_n=None, nest_ngrams=None, simple_n=None, usengrams=None):
        """GET /search/wordlist"""
        url = "https://api.sketchengine.eu/search/wordlist"
        params = {
            'corpname': corpname,
            'wlattr': wlattr,
            'usesubcorp': usesubcorp,
            'wlnums': wlnums,
            'wlmaxfreq': wlmaxfreq,
            'wlminfreq': wlminfreq,
            'wlpat': wlpat,
            'wlsort': wlsort,
            'wlblacklist': wlblacklist,
            'include_nonwords': include_nonwords,
            'relfreq': relfreq,
            'reldocf': reldocf,
            'wlfile': wlfile,
            'wlicase': wlicase,
            'wlmaxitems': wlmaxitems,
            'wlpage': wlpage,
            'format': format,
            'random': random,
            'wltype': wltype,
            'ngrams_n': ngrams_n,
            'ngrams_max_n': ngrams_max_n,
            'nest_ngrams': nest_ngrams,
            'simple_n': simple_n,
            'usengrams': usengrams
        }
        return self._make_request('get', url, params=params)

    def get_search_struct_wordlist(self, corpname=None, wlattr=None, wlstruct_attr1=None, wlstruct_attr2=None, wlstruct_attr3=None, wlnums=None, wlmaxfreq=None, wlminfreq=None, wlmaxitems=None, wlpat=None, wlsort=None, wlblacklist=None, include_nonwords=None, relfreq=None, reldocf=None, wlicase=None, wlpage=None, format=None, random=None, wltype=None):
        """GET /search/struct_wordlist"""
        url = "https://api.sketchengine.eu/search/struct_wordlist"
        params = {
            'corpname': corpname,
            'wlattr': wlattr,
            'wlstruct_attr1': wlstruct_attr1,
            'wlstruct_attr2': wlstruct_attr2,
            'wlstruct_attr3': wlstruct_attr3,
            'wlnums': wlnums,
            'wlmaxfreq': wlmaxfreq,
            'wlminfreq': wlminfreq,
            'wlmaxitems': wlmaxitems,
            'wlpat': wlpat,
            'wlsort': wlsort,
            'wlblacklist': wlblacklist,
            'include_nonwords': include_nonwords,
            'relfreq': relfreq,
            'reldocf': reldocf,
            'wlicase': wlicase,
            'wlpage': wlpage,
            'format': format,
            'random': random,
            'wltype': wltype
        }
        return self._make_request('get', url, params=params)

    def get_search_wsketch(self, corpname=None, lemma=None, lpos=None, usesubcorp=None, minfreq=None, minscore=None, minsim=None, maxitems=None, clustercolls=None, expand_seppage=None, sort_ws_columns=None, structured=None, bim_corpname=None, bim_lemma=None, bim_lpos=None, format=None):
        """GET /search/wsketch"""
        url = "https://api.sketchengine.eu/search/wsketch"
        params = {
            'corpname': corpname,
            'lemma': lemma,
            'lpos': lpos,
            'usesubcorp': usesubcorp,
            'minfreq': minfreq,
            'minscore': minscore,
            'minsim': minsim,
            'maxitems': maxitems,
            'clustercolls': clustercolls,
            'expand_seppage': expand_seppage,
            'sort_ws_columns': sort_ws_columns,
            'structured': structured,
            'bim_corpname': bim_corpname,
            'bim_lemma': bim_lemma,
            'bim_lpos': bim_lpos,
            'format': format
        }
        return self._make_request('get', url, params=params)

    def get_search_thes(self, corpname=None, lemma=None, lpos=None, usesubcorp=None, minthesscore=None, maxthesitems=None, clusteritems=None, minsim=None, format=None):
        """GET /search/thes"""
        url = "https://api.sketchengine.eu/search/thes"
        params = {
            'corpname': corpname,
            'lemma': lemma,
            'lpos': lpos,
            'usesubcorp': usesubcorp,
            'minthesscore': minthesscore,
            'maxthesitems': maxthesitems,
            'clusteritems': clusteritems,
            'minsim': minsim,
            'format': format
        }
        return self._make_request('get', url, params=params)

    def get_search_wsdiff(self, corpname=None, lemma=None, lpos=None, diff_by=None, lemma2=None, minfreq=None, maxcommon=None, separate_blocks=None, maxexclusive=None, wordform1=None, wordform2=None, subcorp1=None, subcorp2=None, format=None):
        """GET /search/wsdiff"""
        url = "https://api.sketchengine.eu/search/wsdiff"
        params = {
            'corpname': corpname,
            'lemma': lemma,
            'lpos': lpos,
            'diff_by': diff_by,
            'lemma2': lemma2,
            'minfreq': minfreq,
            'maxcommon': maxcommon,
            'separate_blocks': separate_blocks,
            'maxexclusive': maxexclusive,
            'wordform1': wordform1,
            'wordform2': wordform2,
            'subcorp1': subcorp1,
            'subcorp2': subcorp2,
            'format': format
        }
        return self._make_request('get', url, params=params)

    def get_search_concordance(self, corpname=None, q=None, concordance_query_queryselector=None, concordance_query_iquery=None, concordance_query_cql=None, concordance_query_lemma=None, concordance_query_char=None, concordance_query_word=None, concordance_query_phrase=None, usesubcorp=None, lpos=None, default_attr=None, attrs=None, refs=None, attr_allpos=None, viewmode=None, cup_hl=None, structs=None, fromp=None, pagesize=None, kwicleftctx=None, kwicrightctx=None, errcorr_switch=None, cup_err_code=None, cup_err=None, cup_corr=None, json=None, asyn=None, format=None):
        """GET /search/concordance"""
        url = "https://api.sketchengine.eu/search/concordance"
        params = {
            'corpname': corpname,
            'q': q,
            'concordance_query[queryselector]': concordance_query_queryselector,
            'concordance_query[iquery]': concordance_query_iquery,
            'concordance_query[cql]': concordance_query_cql,
            'concordance_query[lemma]': concordance_query_lemma,
            'concordance_query[char]': concordance_query_char,
            'concordance_query[word]': concordance_query_word,
            'concordance_query[phrase]': concordance_query_phrase,
            'usesubcorp': usesubcorp,
            'lpos': lpos,
            'default_attr': default_attr,
            'attrs': attrs,
            'refs': refs,
            'attr_allpos': attr_allpos,
            'viewmode': viewmode,
            'cup_hl': cup_hl,
            'structs': structs,
            'fromp': fromp,
            'pagesize': pagesize,
            'kwicleftctx': kwicleftctx,
            'kwicrightctx': kwicrightctx,
            'errcorr_switch': errcorr_switch,
            'cup_err_code': cup_err_code,
            'cup_err': cup_err,
            'cup_corr': cup_corr,
            'json': json,
            'asyn': asyn,
            'format': format
        }
        return self._make_request('get', url, params=params)

    def get_search_fullref(self, corpname=None, pos=None):
        """GET /search/fullref"""
        url = "https://api.sketchengine.eu/search/fullref"
        params = {
            'corpname': corpname,
            'pos': pos
        }
        return self._make_request('get', url, params=params)

    def get_search_widectx(self, corpname=None, pos=None, hitlen=None, structs=None, detail_left_ctx=None, detail_right_ctx=None):
        """GET /search/widectx"""
        url = "https://api.sketchengine.eu/search/widectx"
        params = {
            'corpname': corpname,
            'pos': pos,
            'hitlen': hitlen,
            'structs': structs,
            'detail_left_ctx': detail_left_ctx,
            'detail_right_ctx': detail_right_ctx
        }
        return self._make_request('get', url, params=params)

    def get_search_freqml(self, corpname=None, ml1attr=None, ml1ctx=None, ml2attr=None, ml2ctx=None, ml3attr=None, ml3ctx=None, ml4attr=None, ml4ctx=None, ml5attr=None, ml5ctx=None, ml6attr=None, ml6ctx=None, q=None, usesubcorp=None, fmaxitems=None, fpage=None, group=None, showpoc=None, showreltt=None, showrel=None, freqlevel=None, json=None, freq_sort=None, format=None):
        """GET /search/freqml"""
        url = "https://api.sketchengine.eu/search/freqml"
        params = {
            'corpname': corpname,
            'ml1attr': ml1attr,
            'ml1ctx': ml1ctx,
            'ml2attr': ml2attr,
            'ml2ctx': ml2ctx,
            'ml3attr': ml3attr,
            'ml3ctx': ml3ctx,
            'ml4attr': ml4attr,
            'ml4ctx': ml4ctx,
            'ml5attr': ml5attr,
            'ml5ctx': ml5ctx,
            'ml6attr': ml6attr,
            'ml6ctx': ml6ctx,
            'q': q,
            'usesubcorp': usesubcorp,
            'fmaxitems': fmaxitems,
            'fpage': fpage,
            'group': group,
            'showpoc': showpoc,
            'showreltt': showreltt,
            'showrel': showrel,
            'freqlevel': freqlevel,
            'json': json,
            'freq_sort': freq_sort,
            'format': format
        }
        return self._make_request('get', url, params=params)

    def get_search_freq_distrib(self, corpname=None, res=None, lpos=None, default_attr=None, attrs=None, structs=None, refs=None, attr_allpos=None, viewmode=None, fc_lemword_window_type=None, fc_lemword_wsize=None, fc_lemword_type=None, fc_pos_window_type=None, fc_pos_wsize=None, fc_pos_type=None, json=None, normalize=None, format=None):
        """GET /search/freq_distrib"""
        url = "https://api.sketchengine.eu/search/freq_distrib"
        params = {
            'corpname': corpname,
            'res': res,
            'lpos': lpos,
            'default_attr': default_attr,
            'attrs': attrs,
            'structs': structs,
            'refs': refs,
            'attr_allpos': attr_allpos,
            'viewmode': viewmode,
            'fc_lemword_window_type': fc_lemword_window_type,
            'fc_lemword_wsize': fc_lemword_wsize,
            'fc_lemword_type': fc_lemword_type,
            'fc_pos_window_type': fc_pos_window_type,
            'fc_pos_wsize': fc_pos_wsize,
            'fc_pos_type': fc_pos_type,
            'json': json,
            'normalize': normalize,
            'format': format
        }
        return self._make_request('get', url, params=params)

    def get_search_freqdist(self, corpname=None, wlattr=None, diaattr=None, sse=None, threshold=None, ctx=None, wordlist=None, json=None):
        """GET /search/freqdist"""
        url = "https://api.sketchengine.eu/search/freqdist"
        params = {
            'corpname': corpname,
            'wlattr': wlattr,
            'diaattr': diaattr,
            'sse': sse,
            'threshold': threshold,
            'ctx': ctx,
            'wordlist': wordlist,
            'json': json
        }
        return self._make_request('get', url, params=params)

    def get_search_collx(self, corpname=None, q=None, usesubcorp=None, cattr=None, csortfn=None, cbgrfns=None, cfromw=None, ctow=None, cminfreq=None, cminbgr=None, cmaxitems=None, json=None):
        """GET /search/collx"""
        url = "https://api.sketchengine.eu/search/collx"
        params = {
            'corpname': corpname,
            'q': q,
            'usesubcorp': usesubcorp,
            'cattr': cattr,
            'csortfn': csortfn,
            'cbgrfns': cbgrfns,
            'cfromw': cfromw,
            'ctow': ctow,
            'cminfreq': cminfreq,
            'cminbgr': cminbgr,
            'cmaxitems': cmaxitems,
            'json': json
        }
        return self._make_request('get', url, params=params)

    def get_search_subcorp(self, corpname=None, subcname=None, create=None, delete=None, q=None, struct=None, json=None, format=None):
        """GET /search/subcorp"""
        url = "https://api.sketchengine.eu/search/subcorp"
        params = {
            'corpname': corpname,
            'subcname': subcname,
            'create': create,
            'delete': delete,
            'q': q,
            'struct': struct,
            'json': json,
            'format': format
        }
        return self._make_request('get', url, params=params)

    def get_search_subcorpus_rename(self, corpname=None, subcorp_id=None, new_subcorp_name=None):
        """GET /search/subcorpus_rename"""
        url = "https://api.sketchengine.eu/search/subcorpus_rename"
        params = {
            'corpname': corpname,
            'subcorp_id': subcorp_id,
            'new_subcorp_name': new_subcorp_name
        }
        return self._make_request('get', url, params=params)

    def get_search_subcorp_info(self, corpname=None, subcname=None):
        """GET /search/subcorp_info"""
        url = "https://api.sketchengine.eu/search/subcorp_info"
        params = {
            'corpname': corpname,
            'subcname': subcname
        }
        return self._make_request('get', url, params=params)

    def get_search_extract_keywords(self, corpname=None, ref_corpname=None, usesubcorp=None, simple_n=None, wlfile=None, wlblacklist=None, attr=None, alnum=None, onealpha=None, minfreq=None, maxfreq=None, max_keywords=None, include_nonwords=None, icase=None, wlpat=None, addfreqs=None, reldocf=None, usengrams=None, ngrams_n=None, ngrams_max_n=None, format=None):
        """GET /search/extract_keywords"""
        url = "https://api.sketchengine.eu/search/extract_keywords"
        params = {
            'corpname': corpname,
            'ref_corpname': ref_corpname,
            'usesubcorp': usesubcorp,
            'simple_n': simple_n,
            'wlfile': wlfile,
            'wlblacklist': wlblacklist,
            'attr': attr,
            'alnum': alnum,
            'onealpha': onealpha,
            'minfreq': minfreq,
            'maxfreq': maxfreq,
            'max_keywords': max_keywords,
            'include_nonwords': include_nonwords,
            'icase': icase,
            'wlpat': wlpat,
            'addfreqs': addfreqs,
            'reldocf': reldocf,
            'usengrams': usengrams,
            'ngrams_n': ngrams_n,
            'ngrams_max_n': ngrams_max_n,
            'format': format
        }
        return self._make_request('get', url, params=params)

    def get_search_textypes_with_norms(self, corpname=None):
        """GET /search/textypes_with_norms"""
        url = "https://api.sketchengine.eu/search/textypes_with_norms"
        params = {
            'corpname': corpname
        }
        return self._make_request('get', url, params=params)

    def get_search_attr_vals(self, corpname=None, avattr=None, avpat=None, avfrom=None, avmaxitems=None, icase=None, format=None):
        """GET /search/attr_vals"""
        url = "https://api.sketchengine.eu/search/attr_vals"
        params = {
            'corpname': corpname,
            'avattr': avattr,
            'avpat': avpat,
            'avfrom': avfrom,
            'avmaxitems': avmaxitems,
            'icase': icase,
            'format': format
        }
        return self._make_request('get', url, params=params)

    def get_ca_api_corpora(self):
        """GET /ca/api/corpora"""
        url = "https://api.sketchengine.eu/ca/api/corpora"
        params = None
        return self._make_request('get', url, params=params)

    def post_ca_api_corpora(self):
        """POST /ca/api/corpora"""
        url = "https://api.sketchengine.eu/ca/api/corpora"
        params = None
        return self._make_request('post', url, params=params)

    def get_ca_api_corpora_corpusid(self, corpusId):
        """GET /ca/api/corpora/{corpusId}"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}"
        params = None
        return self._make_request('get', url, params=params)

    def put_ca_api_corpora_corpusid(self, corpusId):
        """PUT /ca/api/corpora/{corpusId}"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}"
        params = None
        return self._make_request('put', url, params=params)

    def delete_ca_api_corpora_corpusid(self, corpusId):
        """DELETE /ca/api/corpora/{corpusId}"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}"
        params = None
        return self._make_request('delete', url, params=params)

    def post_ca_api_corpora_corpusid_can_be_compiled(self, corpusId):
        """POST /ca/api/corpora/{corpusId}/can_be_compiled"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/can_be_compiled"
        params = None
        return self._make_request('post', url, params=params)

    def post_ca_api_corpora_corpusid_get_progress(self, corpusId):
        """POST /ca/api/corpora/{corpusId}/get_progress"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/get_progress"
        params = None
        return self._make_request('post', url, params=params)

    def post_ca_api_corpora_corpusid_compile(self, corpusId):
        """POST /ca/api/corpora/{corpusId}/compile"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/compile"
        params = None
        return self._make_request('post', url, params=params)

    def get_ca_api_corpora_corpusid_logs_logname(self, corpusId, logName):
        """GET /ca/api/corpora/{corpusId}/logs/{logName}"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/logs/{logName}"
        params = None
        return self._make_request('get', url, params=params)

    def get_ca_api_corpora_corpusid_download(self, corpusId, format=None, file_structure=None, aligned=None):
        """GET /ca/api/corpora/{corpusId}/download"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/download"
        params = {
            'format': format,
            'file_structure': file_structure,
            'aligned': aligned
        }
        return self._make_request('get', url, params=params)

    def post_ca_api_corpora_corpusid_cancel_job(self, corpusId):
        """POST /ca/api/corpora/{corpusId}/cancel_job"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/cancel_job"
        params = None
        return self._make_request('post', url, params=params)

    def post_ca_api_corpora_compile_aligned(self):
        """POST /ca/api/corpora/compile_aligned"""
        url = "https://api.sketchengine.eu/ca/api/corpora/compile_aligned"
        params = None
        return self._make_request('post', url, params=params)

    def post_ca_api_corpora_align(self):
        """POST /ca/api/corpora/align"""
        url = "https://api.sketchengine.eu/ca/api/corpora/align"
        params = None
        return self._make_request('post', url, params=params)

    def get_ca_api_corpora_corpusid_documents(self, corpusId, fileset_id=None):
        """GET /ca/api/corpora/{corpusId}/documents"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents"
        params = {
            'fileset_id': fileset_id
        }
        return self._make_request('get', url, params=params)

    def post_ca_api_corpora_corpusid_documents(self, corpusId, corpusId_2, fileset_id=None, fileset_id_2=None, wait_with_tagging=None):
        """POST /ca/api/corpora/{corpusId}/documents"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId_2}/documents"
        params = {
            'fileset_id': fileset_id,
            'fileset_id': fileset_id_2,
            'wait_with_tagging': wait_with_tagging
        }
        return self._make_request('post', url, params=params)

    def put_ca_api_corpora_corpusid_documents(self, corpusId, fileset_id=None):
        """PUT /ca/api/corpora/{corpusId}/documents"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents"
        params = {
            'fileset_id': fileset_id
        }
        return self._make_request('put', url, params=params)

    def get_ca_api_corpora_corpusid_documents_documentid(self, corpusId, documentId):
        """GET /ca/api/corpora/{corpusId}/documents/{documentId}"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents/{documentId}"
        params = None
        return self._make_request('get', url, params=params)

    def put_ca_api_corpora_corpusid_documents_documentid(self, corpusId, documentId):
        """PUT /ca/api/corpora/{corpusId}/documents/{documentId}"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents/{documentId}"
        params = None
        return self._make_request('put', url, params=params)

    def delete_ca_api_corpora_corpusid_documents_documentid(self, corpusId, documentId):
        """DELETE /ca/api/corpora/{corpusId}/documents/{documentId}"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents/{documentId}"
        params = None
        return self._make_request('delete', url, params=params)

    def post_ca_api_corpora_corpusid_documents_documentid_preview(self, corpusId, documentId):
        """POST /ca/api/corpora/{corpusId}/documents/{documentId}/preview"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents/{documentId}/preview"
        params = None
        return self._make_request('post', url, params=params)

    def get_ca_api_corpora_corpusid_documents_documentid_original(self, corpusId, documentId):
        """GET /ca/api/corpora/{corpusId}/documents/{documentId}/original"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents/{documentId}/original"
        params = None
        return self._make_request('get', url, params=params)

    def get_ca_api_corpora_corpusid_documents_documentid_plaintext(self, corpusId, documentId):
        """GET /ca/api/corpora/{corpusId}/documents/{documentId}/plaintext"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents/{documentId}/plaintext"
        params = None
        return self._make_request('get', url, params=params)

    def get_ca_api_corpora_corpusid_documents_documentid_vertical(self, corpusId, documentId):
        """GET /ca/api/corpora/{corpusId}/documents/{documentId}/vertical"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents/{documentId}/vertical"
        params = None
        return self._make_request('get', url, params=params)

    def post_ca_api_corpora_corpusid_documents_documentid_expand_archive(self, corpusId, documentId):
        """POST /ca/api/corpora/{corpusId}/documents/{documentId}/expand_archive"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents/{documentId}/expand_archive"
        params = None
        return self._make_request('post', url, params=params)

    def post_ca_api_corpora_corpusid_documents_documentid_cancel_job(self, corpusId, documentId):
        """POST /ca/api/corpora/{corpusId}/documents/{documentId}/cancel_job"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents/{documentId}/cancel_job"
        params = None
        return self._make_request('post', url, params=params)

    def post_ca_api_corpora_corpusid_documents_documentid_get_progress(self, corpusId, documentId):
        """POST /ca/api/corpora/{corpusId}/documents/{documentId}/get_progress"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/documents/{documentId}/get_progress"
        params = None
        return self._make_request('post', url, params=params)

    def get_ca_api_corpora_corpusid_filesets(self, corpusId, compile_when_finished=None):
        """GET /ca/api/corpora/{corpusId}/filesets"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/filesets"
        params = {
            'compile_when_finished': compile_when_finished
        }
        return self._make_request('get', url, params=params)

    def post_ca_api_corpora_corpusid_filesets(self, corpusId, compile_when_finished=None):
        """POST /ca/api/corpora/{corpusId}/filesets"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/filesets"
        params = {
            'compile_when_finished': compile_when_finished
        }
        return self._make_request('post', url, params=params)

    def get_ca_api_corpora_corpusid_filesets_filesetid(self, corpusId, filesetId):
        """GET /ca/api/corpora/{corpusId}/filesets/{filesetId}"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/filesets/{filesetId}"
        params = None
        return self._make_request('get', url, params=params)

    def delete_ca_api_corpora_corpusid_filesets_filesetid(self, corpusId, filesetId):
        """DELETE /ca/api/corpora/{corpusId}/filesets/{filesetId}"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/filesets/{filesetId}"
        params = None
        return self._make_request('delete', url, params=params)

    def post_ca_api_corpora_corpusid_filesets_filesetid_cancel_job(self, corpusId, filesetId):
        """POST /ca/api/corpora/{corpusId}/filesets/{filesetId}/cancel_job"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/filesets/{filesetId}/cancel_job"
        params = None
        return self._make_request('post', url, params=params)

    def post_ca_api_corpora_corpusid_filesets_filesetid_get_progress(self, corpusId, filesetId):
        """POST /ca/api/corpora/{corpusId}/filesets/{filesetId}/get_progress"""
        url = f"https://api.sketchengine.eu/ca/api/corpora/{corpusId}/filesets/{filesetId}/get_progress"
        params = None
        return self._make_request('post', url, params=params)

    def get_ca_api_languages(self):
        """GET /ca/api/languages"""
        url = "https://api.sketchengine.eu/ca/api/languages"
        params = None
        return self._make_request('get', url, params=params)

    def post_ca_api_somefiles(self):
        """POST /ca/api/somefiles"""
        url = "https://api.sketchengine.eu/ca/api/somefiles"
        params = None
        return self._make_request('post', url, params=params)

    def get_ca_api_somefiles_somefileid(self, somefileId):
        """GET /ca/api/somefiles/{somefileId}"""
        url = f"https://api.sketchengine.eu/ca/api/somefiles/{somefileId}"
        params = None
        return self._make_request('get', url, params=params)

    def put_ca_api_somefiles_somefileid(self, somefileId):
        """PUT /ca/api/somefiles/{somefileId}"""
        url = f"https://api.sketchengine.eu/ca/api/somefiles/{somefileId}"
        params = None
        return self._make_request('put', url, params=params)

    def get_ca_api_tagsets_templateid(self, templateId):
        """GET /ca/api/tagsets/{templateId}"""
        url = f"https://api.sketchengine.eu/ca/api/tagsets/{templateId}"
        params = None
        return self._make_request('get', url, params=params)

    def put_ca_api_tagsets_templateid(self, templateId):
        """PUT /ca/api/tagsets/{templateId}"""
        url = f"https://api.sketchengine.eu/ca/api/tagsets/{templateId}"
        params = None
        return self._make_request('put', url, params=params)

    def delete_ca_api_tagsets_templateid(self, templateId):
        """DELETE /ca/api/tagsets/{templateId}"""
        url = f"https://api.sketchengine.eu/ca/api/tagsets/{templateId}"
        params = None
        return self._make_request('delete', url, params=params)

    def post_ca_api_users_me_get_used_space(self):
        """POST /ca/api/users/me/get_used_space"""
        url = "https://api.sketchengine.eu/ca/api/users/me/get_used_space"
        params = None
        return self._make_request('post', url, params=params)

    def post_ca_api_octerms_datasets(self):
        """POST /ca/api/octerms/datasets"""
        url = "https://api.sketchengine.eu/ca/api/octerms/datasets"
        params = None
        return self._make_request('post', url, params=params)

    def get_ca_api_octerms_datasets_datasetid(self, datasetId):
        """GET /ca/api/octerms/datasets/{datasetId}"""
        url = f"https://api.sketchengine.eu/ca/api/octerms/datasets/{datasetId}"
        params = None
        return self._make_request('get', url, params=params)
